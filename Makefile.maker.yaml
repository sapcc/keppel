# Configuration file for <https://github.com/sapcc/go-makefile-maker>

metadata:
  url: https://github.com/sapcc/keppel

binaries:
  - name:        keppel
    fromPackage: .
    installTo:   bin/

coverageTest:
  only: '/internal'
  except: '/drivers|/test/util'

dockerfile:
  enabled: true
  extraIgnores:
    - "*.actual"
    - privkey.pem

golang:
  autoupdateableDeps: ^github.com/(?:sapcc|sap-cloud-infrastructure)/
  setGoModVersion: true

golangciLint:
  createConfig: true
  errcheckExcludes:
    - encoding/json.Marshal
    # Any error in HTTP handlers is handled by the server itself.
    - (net/http.ResponseWriter).Write
    - (*github.com/spf13/cobra.Command).Help

githubWorkflow:
  ci:
    enabled: true

nix:
  extraPackages:
    - openssl

renovate:
  enabled: true
  assignees:
    - majewsky
    - SuperSandro2000
  packageRules:
    - matchDepTypes: ["action"]
      matchFileNames: [".github/workflows/oci-distribution-conformance.yml"]
      enabled: true

reuse:
  annotations:
    - paths:
      - docs/*.png
      - docs/*.svg
      - docs/*.json
      - internal/**/fixtures/**/*.json
      - internal/**/fixtures/**/*.sql
      - internal/**/fixtures/**/*.sql.actual
      SPDX-FileCopyrightText: SAP SE or an SAP affiliate company
      SPDX-License-Identifier: Apache-2.0

verbatim: |
  # This is for manual testing.
  run-api: build/keppel
    set -euo pipefail && source ./.env && $(CURDIR)/build/keppel server api

  copy-fixtures:
    find -name '*.actual' | xargs -I{} bash -c 'mv {} $$(echo {} | sed "s/.actual//g")'

  conformance-test/privkey.pem:
    openssl genrsa -out $@ 4096

  # This is for running test suites like the OCI distribution API conformance test.
  # An account called "conformance-test" and a hardcoded username/password pair
  # (see env.sh mentioned below) will be pre-configured and ready to use for the test run.
  run-api-for-conformance-test: build/keppel conformance-test/privkey.pem
    @echo "Ready to run conformance test"
    set -euo pipefail && source conformance-test/env.sh && conformance-test/with-postgres-db.sh $(CURDIR)/build/keppel server api
